"use strict";function e(e,t){const r=[],{length:n}=e;if(Array.isArray(t)){if(!t.filter((e=>e&&e<n)).length)throw new RangeError(`expected maxChunkSize.length > 0 and each values < ${n} but got ${t}`);let u,o=0;for(let a of t){if(u=o+a,r.push(e.slice(o,u)),u>=n)break;o=u}u<n&&r.push(e.slice(o))}else{if("number"!=typeof t||t<1)throw new RangeError(`expected maxChunkSize > 0 but got ${t}`);for(let u=0;u<n;u++){let n=u+t;r.push(e.slice(u,n)),u=n-1}}return r}function t(t,r){if("number"!=typeof r||r<1)throw new RangeError(`expected maxChunkLength > 0 but got ${r}`);return e(t,Math.max(Math.round(t.length/r),1))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.arrayChunkBySize=e,exports.arrayChunkMap=function(r){const{inputArray:n,maxChunkLength:u,maxChunkSize:o}=r;let a,{mapMethod:h}=r;if(null!=u)a=t(n,u);else{if(null==o)throw new TypeError("maxChunkLength or maxChunkSize is required");a=e(n,o)}return"function"!=typeof h&&(h=h?e=>e[e.length-1]:e=>e[0]),a.map(h)},exports.arrayChunkSplit=t,exports.default=t;
//# sourceMappingURL=index.cjs.production.min.cjs.map
