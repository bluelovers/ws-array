!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).index={})}(this,(function(e){"use strict";function arrayChunkBySize(e,n){const r=[],{length:t}=e;if(Array.isArray(n)){if(!n.filter((e=>e&&e<t)).length)throw new RangeError(`expected maxChunkSize.length > 0 and each values < ${t} but got ${n}`);let a,u=0;for(let i of n){if(a=u+i,r.push(e.slice(u,a)),a>=t)break;u=a}a<t&&r.push(e.slice(u))}else{if("number"!=typeof n||n<1)throw new RangeError(`expected maxChunkSize > 0 but got ${n}`);for(let a=0;a<t;a++){let t=a+n;r.push(e.slice(a,t)),a=t-1}}return r}function arrayChunkSplit(e,n){if("number"!=typeof n||n<1)throw new RangeError(`expected maxChunkLength > 0 but got ${n}`);return arrayChunkBySize(e,Math.max(Math.round(e.length/n),1))}e.arrayChunkBySize=arrayChunkBySize,e.arrayChunkMap=function arrayChunkMap(e){const{inputArray:n,maxChunkLength:r,maxChunkSize:t}=e;let a,{mapMethod:u}=e;if(null!=r)a=arrayChunkSplit(n,r);else{if(null==t)throw new TypeError("maxChunkLength or maxChunkSize is required");a=arrayChunkBySize(n,t)}return"function"!=typeof u&&(u=u?e=>e[e.length-1]:e=>e[0]),a.map(u)},e.arrayChunkSplit=arrayChunkSplit,e.default=arrayChunkSplit,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=index.umd.production.min.cjs.map
